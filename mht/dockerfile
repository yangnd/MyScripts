#语法：FROM <image>:<tag>
#指明构建的新镜像是来自于哪个基础镜像，如果没有选择 tag，那么默认值为 latest。
FROM ubuntu:latest

#语法：LABEL <key>=<value> <key>=<value> <key>=<value> ...
#功能是为镜像指定标签。也可以使用 LABEL 来指定镜像作者。
LABEL maintainer="Yang Nandong <yangnd89@qq.com>"

#语法：ARG <key>=<value>
#构建参数，与 ENV 作用一至。不过作用域不一样。ARG 设置的环境变量仅对 Dockerfile 内有效，也就是说只有 docker build 的过程中有效，构建好的镜像内不存在此环境变量。
#构建命令 docker build 中可以用 --build-arg <参数名>=<值> 来覆盖。
#ARG 

#语法：ENV <key> <value> 添加单个，ENV <key>=<value> ... 添加多个。
#设置容器内环境变量。
#ENV

#支持中文显示
ENV LANG=C.UTF-8 
#设置时区CST
RUN apt update && apt install -y tzdata
ENV TZ Asia/Shanghai

#语法：WORKDIR /path/to/workdir
#为 RUN、CMD、ENTRYPOINT 以及 COPY 和 AND 设置工作目录。
WORKDIR /

#指定容器挂载点到宿主机自动生成的目录或其他容器。一般的使用场景为需要持久化存储数据时。
#一般不会在 Dockerfile 中用到，更常见的还是在 docker run 的时候通过 -v 指定数据卷。
#VOLUME
RUN apt update 
#语法：RUN <command>
#构建镜像时运行的 Shell 命令，比如构建的新镜像中我们想在 /usr/local 目录下创建一个 java 目录。
RUN apt-get update \
    && apt-get -y install curl cron \
	&& mkdir -p /mht_cache

#语法：ADD <src>... <dest>
#拷贝文件或目录到镜像中。src 可以是一个本地文件或者是一个本地压缩文件，压缩文件会自动解压。还可以是一个 url，如果把 src 写成一个 url，那么 ADD 就类似于 wget 命令，然后自动下载和解压。
#ADD

#语法：COPY <src>... <dest>
#拷贝文件或目录到镜像中。用法同 ADD，只是不支持自动下载和解压。
COPY ipes_install_run.sh /root

#语法：EXPOSE <port> [<port>/<protocol>...]
#暴露容器运行时的监听端口给外部，可以指定端口是监听 TCP 还是 UDP，如果未指定协议，则默认为 TCP。
#EXPOSE 

#语法：
    #CMD ["executable","param1","param2"]，比如：CMD ["/usr/local/tomcat/bin/catalina.sh", "start"]
    #CMD ["param1","param2"]，比如：CMD [ "echo", "$JAVA_HOME" ]
    #CMD command param1 param2，比如：CMD echo $JAVA_HOME
#启动容器时执行的 Shell 命令。在 Dockerfile 中只能有一条 CMD 指令。如果设置了多条 CMD，只有最后一条 CMD 会生效。
#如果创建容器的时候指定了命令，则 CMD 命令会被替代。

#语法：
    #ENTRYPOINT ["executable", "param1", "param2"]，比如：ENTRYPOINT ["/usr/local/tomcat/bin/catalina.sh", "start"]
    #ENTRYPOINT command param1 param2，比如：ENTRYPOINT ehco $JAVA_HOME
#启动容器时执行的 Shell 命令，同 CMD 类似，不会被 docker run 命令行指定的参数所覆盖。在 Dockerfile 中只能有一条 ENTRYPOINT 指令。如果设置了多条 ENTRYPOINT，只有最后一条 ENTRYPOINT 会生效。
#如果在 Dockerfile 中同时写了 ENTRYPOINT 和 CMD，并且 CMD 指令不是一个完整的可执行命令，那么 CMD 指定的内容将会作为 ENTRYPOINT 的参数；
#如果在 Dockerfile 中同时写了 ENTRYPOINT 和 CMD，并且 CMD 是一个完整的指令，那么它们两个会互相覆盖，谁在最后谁生效

ENTRYPOINT bash /root/ipes_install_run.sh